control 'M-7.6' do
  title '7.6 Ensure swarm manager is run in auto-lock mode (Scored)'
  desc  "Run the docker swarm manager in auto-lock mode.
  When Docker restarts, both the TLS key used to encrypt communication among
  swarm nodes, and the key used to encrypt and decrypt Raft logs on disk, are
  loaded into each manager node's memory. You should protect the mutual TLS encryption key and
  the key used to encrypt and decrypt Raft logs at rest. This protection could be
  enabled by initializing the swarm with the --autolock flag.
  With the --autolock parameter enabled, when Docker restarts, you must unlock the swarm
  first, using an encryption key generated by Docker when the swarm was initialized.
  "
  impact 0.5
  tag "ref": '1. https://docs.docker.com/engine/swarm/swarm_manager_locking/'
  tag "severity": 'medium'
  tag "cis_id": '7.6'
  tag "cis_control": ['14.2', '6.1']
  tag "cis_level": 'Level 1 - Docker'
  tag "nist": ['SC-8', '4']
  tag "check_text": "Run the below command. If it outputs the key, it means the swarm
  was initialized with the -autolock flag. If the output is no unlock key is set,
  it means that the swarm was NOT initialized with the --autolock flag and is
  non-compliant with respect to this recommendation. docker swarm unlock-key"
  tag "fix": "If you are initializing swarm, use the below command. docker
  swarm init --autolock If you want to set --autolock on an existing swarm
  manager node, use the below command. docker swarm update --autolock"
  tag "Default Value": 'By default, swarm manager does not run in auto-lock mode.'
  if attribute('swarm_mode') == 'active'
    autolock_mode = command('docker swarm unlock-key').stdout.chomp.length

    describe 'The swarn mananager auto-lock mode' do
      subject { autolock_mode }
      it { should be > 0 }
    end
  else
    impact 0.0
    describe 'The docker swarm mode is not being used, therefore this control is N/A' do
      skip 'The docker swarm mode is not being used, therefore this control is N/A'
    end
  end
end

